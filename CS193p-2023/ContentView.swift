//
//  ContentView.swift
//  CS193p-2023
//
//  Created by Tran Lam on 16/11/2023.
//

import SwiftUI

struct ContentView: View {
    let emojis = ["üëª", "üéÉ", "üï∑Ô∏è", "üòà"]
    var body: some View {
        // Note: Kh√¥ng th·ªÉ d√πng for trong c√°c Stack. ƒê·ªçc b√™n d∆∞·ªõi ƒë·ªÉ bi·∫øt trong ViewBuilder support nh·ªØng lo·∫°i n√†o
        HStack {
            ForEach(emojis.indices, id: \.self) { index in
                CardView(content: emojis[index], isFaceUp: true)
            }
        }
        .padding()
    }
}

struct CardView: View {
    var content: String = "üëª"
    @State var isFaceUp: Bool = true // Khi mark v·ªõi @State l√† ƒëang t·∫°o ra bi·∫øn n√†y l√† 1 tham chi·∫øu (pointer)
    /*T·∫°i sao l·∫°i c·∫ßn @State:
     V·ªÅ c∆° b·∫£n ·ªü ViewBuilder b√™n d∆∞·ªõi khi mu·ªën thay ƒë·ªïi bi·∫øn thu·ªôc Struct l√† kh√¥ng th·ªÉ v√¨ bi·∫øn ·ªü trong Struct s·∫Ω l√† immutable.

     Khi t·∫°o ra bi·∫øn s·∫Ω c·∫•p ph√°t cho n√≥ 1 v√πng tr√™n b·ªô nh·ªõ, ·ªü tr√™n struct th√¨ bi·∫øn n√†y ko th·ªÉ thay ƒë·ªïi.
     -> T·∫°i sao kh√¥ng th·ªÉ thay ƒë·ªïi: isFaceUp l√† 1 bi·∫øn c·ªßa struct v√† body th·ª±c ch·∫•t c≈©ng l√† 1 bi·∫øn c·ªßa struct ( ·ªü ƒë√¢y l√† CardView)
     Kh√¥ng th·ªÉ d√πng 1 bi·∫øn ƒë·ªÉ thay ƒë·ªïi 1 bi·∫øn. (Note: line 28-30 c√≥ th·ªÉ sai v√¨ th·ª±c ch·∫•t ƒë√©o hi·ªÉu ƒëo·∫°n n√†y l·∫Øm ƒë√¢u)


     T·∫°o ra bi·∫øn v·ªõi @State l√† t·∫°o ra 1 tham chi·∫øu t·ªõi 1 gi√° tr·ªã n√†o ƒë√≥. N√™n v·ªÅ l√Ω thuy·∫øt khi thay ƒë·ªïi nh∆∞ code ·ªü d√≤ng 53 th√¨ ƒëang thay ƒë·ªïi n∆°i n√≥ tham chi·∫øu t·ªõi (ch·ªó memory g√¨ ƒë√≥) ch·ª© kh√¥ng thay ƒë·ªïi pointer
     */

    var body: some View {
        ZStack {
            // ·ªü ƒë√¢y l√† 1 ViewBuilder
            let base = RoundedRectangle(cornerRadius: 12) // ViewBuilder ch·ªâ c√≥ th·ªÉ support cho 3 th·ª©
            // 1 - l√† if else || switch case
            // 2 - l√† list
            // 3 - l√† variable assignment -> g·∫Øn cho 1 bi·∫øn 1 c·ª• th·ªÉ nh∆∞ line 28

            if isFaceUp {
                base.fill(.white)
                base.strokeBorder(lineWidth: 2)
                Text(content).font(.largeTitle)
            } else {
                base.fill(.orange)
            }
        }
        .onTapGesture {
//            isFaceUp = !isFaceUp
            isFaceUp.toggle() //toggle thu·ªôc extension c·ªßa Boolen th√¥i nh√°
        }



        .foregroundColor(.orange)
        .imageScale(.small)
    }
}

#Preview {
    ContentView()
}
